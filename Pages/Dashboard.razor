@page "/dashboard"
@using KhumaloCraft.Models
@using KhumaloCraft.Services
@using System.Security.Claims
@inject OrderService OrderService
@inject AuthenticationStateProvider AuthenticationStateProvider

<h2>Welcome to Your Dashboard</h2>

<div>
    <!-- Place Order Section -->
    <h3>Place Order</h3>
    <div>
        <!-- Your order form here -->
    </div>
</div>

<div>
    <!-- Order History Section -->
    <h3>Order History</h3>
    <div>
        @if (IsAuthenticated)
        {
            @if (OrderHistory != null && OrderHistory.Any())
            {
                <table class="table">
                    <thead>
                        <tr>
                            <th>Order ID</th>
                            <th>Order Date</th>
                            <th>Total Amount</th>
                            <!-- Add more columns as needed -->
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var order in OrderHistory)
                        {
                            <tr>
                                <td>@order.OrderID</td>
                                <td>@order.OrderDate.ToShortDateString()</td>
                                <td>@order.TotalAmount.ToString("C")</td>
                                <!-- Display additional order details -->
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p>No orders found.</p>
            }
        }
        else
        {
            <p>Please log in to view your order history.</p>
        }
    </div>
</div>

@code {
    private List<Order> OrderHistory;
    private bool IsAuthenticated;

    protected override async Task OnInitializedAsync()
    {
        var authenticationState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        IsAuthenticated = authenticationState.User.Identity.IsAuthenticated;

        if (IsAuthenticated)
        {
            // Get the user's order history
            var user = authenticationState.User;
            var userId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;

            OrderHistory = (await OrderService.GetOrderHistory(userId)).ToList();
        }
    }
}
